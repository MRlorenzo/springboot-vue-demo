<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.spmul</groupId>
	<artifactId>web</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>web</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>

		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--引入fastjson模块-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.83</version>
		</dependency>


		<!--
		引入权限模块
		-->
		<dependency>
			<groupId>org.spmul</groupId>
			<artifactId>shiro</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- 引入缓存模块 -->
		<dependency>
			<groupId>org.spmul</groupId>
			<artifactId>redis</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.spmul</groupId>
			<artifactId>ws</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>

				<configuration>
					<!-- 指定该Main Class为全局的唯一入口 -->
					<mainClass>org.spmul.web.WebApplication</mainClass>
					<layout>ZIP</layout>
				</configuration>

				<executions>
					<execution>
						<goals>
							<goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>exec-npm-install</id>   &lt;!&ndash; 名字可以随便定义建议见名知意
						<phase>prepare-package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>   执行命令
							<arguments>
								<argument>install</argument>   参数
							</arguments>
							<workingDirectory>${basedir}/src/main/webapp</workingDirectory>  前端工作目录
						</configuration>
					</execution>&ndash;&gt;

					<execution>
						<id>exec-npm-run-build</id>  &lt;!&ndash; 名字可以随便定义建议见名知意 &ndash;&gt;
						<phase>prepare-package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>  &lt;!&ndash; 执行命令 &ndash;&gt;
							<arguments>
								<argument>run</argument>
								<argument>build:prod</argument>  &lt;!&ndash; 参数: prod &ndash;&gt;
							</arguments>
							<workingDirectory>${basedir}/src/main/webapp</workingDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>  <!-- 设置编码格式 -->
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy-spring-boot-webapp</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>  <!-- 复制资源文件 -->
						</goals>
						<configuration>
							<encoding>utf-8</encoding>
							<overwrite>true</overwrite>
							<outputDirectory>${basedir}/src/main/resources/static</outputDirectory>  <!-- target -->
							<resources>
								<resource>   <!-- source -->
									<directory>${basedir}/src/main/webapp/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
