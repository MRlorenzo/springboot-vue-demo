<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.spmul.dao.shiro.SysUserDao">
	<cache-ref namespace="org.spmul.dao.shiro.SysUserDao"/>
	<cache readOnly="true"/>

	<resultMap id="sysUserMap" type="org.spmul.entity.shiro.SysUserEntity">
		<result property="userId" column="user_id"/>
		<result property="username" column="username"/>
		<result property="password" column="password"/>
		<result property="freePwd" column="free_pwd"/>
		<result property="status" column="status"/>
		<result property="createUserId" column="create_user_id"/>
		<result property="createTime" column="create_time"/>
		<result property="departmentId" column="department_id"/>
		<result property="description" column="description"/>
	</resultMap>

	<resultMap id="allInfo" type="org.spmul.entity.shiro.SysUserEntity" extends="sysUserMap">
		<association property="departmentInfo" column="department_id" select="org.spmul.dao.shiro.DepartmentDao.queryObject"/>
		<collection property="roles" column="user_id" select="org.spmul.dao.shiro.SysRoleDao.queryBatchByUserId"/>
	</resultMap>


	<sql id="queryObjectSql">
		select * from sys_user where user_id = #{value}
	</sql>

	<sql id="queryObjectByFreePwdSql">
		select * from sys_user where free_pwd = #{value}
	</sql>

	<sql id="queryListWhereSql">
		<where>
			<if test="createUserId != null">
				and `create_user_id` = #{createUserId}
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%')
			</if>
			<if test="startTime != null and startTime.toString() != ''">
				and create_time &gt; #{startTime}
			</if>
			<if test="endTime != null and endTime.toString() != ''">
				and create_time &lt; #{endTime}
			</if>
			<if test="status != null and status.trim() != ''">
				and `status`=#{status}
			</if>
			<if test="departmentId != null ">
				and `department_id` = #{departmentId}
			</if>
		</where>
	</sql>

	<sql id="queryListSql">
		select * from sys_user
		<include refid="queryListWhereSql"/>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</sql>

	<select id="queryObjectByFreePwd" resultMap="allInfo">
		<include refid="queryObjectByFreePwdSql"/>
	</select>

	<select id="queryObject" resultMap="allInfo">
		<include refid="queryObjectSql"/>
	</select>

	<select id="queryList" resultType="org.spmul.entity.shiro.SysUserEntity">
		<include refid="queryListSql"/>
	</select>


	<select id="queryAllInfoList" resultMap="allInfo">
		<include refid="queryListSql"/>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from sys_user
		<include refid="queryListWhereSql"/>
	</select>

	<select id="queryByUserName" resultMap="allInfo">
		select *  from sys_user where username = #{username}
	</select>

	<insert id="save" parameterType="org.spmul.entity.shiro.SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`user_id`,
			`username`,
			`password`,
			`free_pwd`,
			`status`,
			`create_user_id`,
			`create_time`,
			`department_id`,
			`description`
		)
		values
		(
			#{userId},
			#{username},
			#{password},
			#{freePwd},
			#{status},
			#{createUserId},
			#{createTime},
			#{departmentId},
			#{description}
		)
	</insert>

	<update id="update" parameterType="org.spmul.entity.shiro.SysUserEntity">
		update sys_user
		<set>
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="freePwd != null">`free_pwd` = #{freePwd},</if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="departmentId!=null">`department_id` = #{departmentId},</if>
			<if test="description != null">`description` = #{description}</if>
		</set>
		where user_id = #{userId}
		<if test="createUserId != null">
			and `create_user_id` = #{createUserId}
		</if>
	</update>

	<update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword}
			where user_id = #{userId} and password = #{password}
	</update>

	<update id="changeStatus" parameterType="map">
		update sys_user
		<set>
			<if test="status != null">
				status = #{status}
			</if>
		</set>
		where user_id = #{userId}
	</update>

	<delete id="deleteBatch">
		delete from sys_user where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		delete from sys_user_role where user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

</mapper>
