<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.spmul.dao.shiro.SysRoleDao">
	<cache-ref namespace="org.spmul.dao.shiro.SysRoleDao"/>
	<cache readOnly="true"/>


	<resultMap id="sysRoleMap" type="org.spmul.entity.shiro.SysRoleEntity">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="description" column="description"/>
		<result property="createUserId" column="create_user_id"/>
		<result property="createTime" column="create_time"/>
		<result property="isShift" column="is_shift"/>
		<result property="isDel" column="is_del"/>
		<result property="departmentId" column="department_id"/>
		<result property="sort" column="sort"/>
	</resultMap>

	<resultMap id="allInfo" type="org.spmul.entity.shiro.SysRoleEntity" extends="sysRoleMap">
		<association property="department" column="department_id" select="org.spmul.dao.shiro.DepartmentDao.queryObject"/>
		<collection property="routes" column="id" select="org.spmul.dao.shiro.RouteDao.queryByRoleId"/>
	</resultMap>


	<select id="queryObject" resultMap="allInfo">
		select * from sys_role where role_id = #{value} and is_del=0
	</select>

	<sql id="queryListWhereSql">
		where is_del = 0
		<if test="name != null and name.trim() != ''">
			and `role_name` like concat('%',#{name},'%')
		</if>
		<if test="createUserId != null">
			and create_user_id = #{createUserId}
		</if>
		<if test="isShift != null">
			and is_shift = #{isShift}
		</if>
		<if test="departmentId != null and departmentId != '' ">
			and department_id = #{departmentId}
		</if>
		<if test="roleFiltering != null">
			AND sort > ( SELECT MIN(sort) FROM sys_role WHERE role_id = #{roleFiltering} )
		</if>
	</sql>

	<select id="queryList" resultMap="allInfo">
		select * from sys_role
		<include refid="queryListWhereSql"/>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by sort asc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from sys_role
		<include refid="queryListWhereSql"/>
	</select>

	<insert id="save" parameterType="org.spmul.entity.shiro.SysRoleEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sys_role
		(
			`name`,
			`description`,
			`create_user_id`,
			`create_time`,
			`is_shift`,
			`is_del`,
			`department_id`,
			`sort`
		)
		values
		(
			#{name},
			#{description},
			#{createUserId},
			#{createTime},
			#{isShift},
			#{isDel},
			#{departmentId},
			#{sort}
		)
	</insert>

	<update id="update" parameterType="org.spmul.entity.shiro.SysRoleEntity">
		update sys_role
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="description != null">`description` = #{description} ,</if>
			<if test="isShift!=null">`is_shift` = #{isShift},</if>
			<if test="isDel!=null">`is_del` = #{isDel},</if>
			<if test="departmentId!=null">`department_id` = #{departmentId},</if>
			<if test="sort!=null">`sort` = #{sort}</if>
		</set>
		where id = #{id}
	</update>

	<update id="deleteBatch">
		update sys_role  set is_del=1 where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<!-- 查询用户创建的角色ID列表 -->
	<select id="queryRoleIdList" resultType="long">
		select id from sys_role where create_user_id = #{createUserId}  and is_del=0
	</select>

	<!-- 查询用户创建的角色ID列表 -->
	<select id="queryRoleIdListByUserId" resultType="long">
		SELECT DISTINCT b.id
		FROM
			sys_user_role a,
			sys_role b
		WHERE
			a.role_id = b.id AND user_id = #{userId}
		ORDER BY b.sort
	</select>

	<select id="queryBatchByUserId" resultType="org.spmul.entity.shiro.SysRoleEntity">
		select * from sys_role where id in (
		select role_id from sys_user_role where user_id=#{userId}
		)
		and is_del=0 order by sort asc
	</select>


	<select id="queryListByDepartmentId" resultType="org.spmul.entity.shiro.SysRoleEntity">
		select * from sys_role where department_id=#{departmentId} and is_del=0 ORDER BY  sort ASC
	</select>


	<select id="queryByString" resultType="org.spmul.entity.shiro.SysRoleEntity">
		select * from sys_role where name=#{value}
	</select>

</mapper>
