<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.spmul.dao.shiro.DepartmentDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="org.spmul.entity.shiro.DepartmentEntity" id="departmentMap">
        <result property="departmentId" column="department_id"/>
        <result property="name" column="name"/>
        <result property="enName" column="en_name"/>
        <result property="departmentCode" column="department_code"/>
        <result property="sort" column="sort"/>
    </resultMap>

	<select id="queryObject" resultMap="departmentMap">
		select * from tb_department where department_id = #{value}
	</select>

	<sql id="queryListWhereSql">
		<where>
			<if test="name != null and name.trim()!=''">
				`name` like concat('%',#{name},'%')
			</if>
			<if test="enName != null and enName.trim() != ''">
				and en_name like concat('%',#{enName},'%')
			</if>
			<if test="departmentCode != null and departmentCode.trim() != ''">
				and department_code = #{departmentCode}
			</if>
			<if test="departmentId != null and departmentId != ''">
				AND  department_id = #{departmentId}
			</if>
		</where>
	</sql>

	<select id="queryList" resultMap="departmentMap">
		select * from tb_department
        <include refid="queryListWhereSql"/>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

 	<select id="queryTotal" resultType="int">
		select count(*) from tb_department
		<include refid="queryListWhereSql"/>
	</select>

	<insert id="save" parameterType="org.spmul.entity.shiro.DepartmentEntity" useGeneratedKeys="true" keyProperty="departmentId">
		insert into tb_department
		(
			`name`,
			`en_name`,
			`department_code`,
			`sort`
		)
		values
		(
			#{name},
			#{enName},
			#{departmentCode},
			#{sort}
		)
	</insert>

	<update id="update" parameterType="org.spmul.entity.shiro.DepartmentEntity">
		update tb_department
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="enName != null">`en_name` = #{enName}, </if>
			<if test="departmentCode != null">`department_code` = #{departmentCode},</if>
			<if test="sort != null">`sort` = #{sort}</if>
		</set>
		where department_id = #{departmentId}
	</update>

	<delete id="delete">
		delete from tb_department where department_id = #{value}
	</delete>

	<delete id="deleteBatch">
		delete from tb_department where department_id in
		<foreach item="departmentId" collection="array" open="(" separator="," close=")">
			#{departmentId}
		</foreach>
	</delete>


	<select id="queryDepartmentIdByString">
		select department_id from tb_department where name=#{value} or en_name=#{value} or department_code=#{value}
	</select>

</mapper>
